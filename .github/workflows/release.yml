name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Rust
      uses: actions/setup-rust@v1
      with:
        rust-version: stable

    - name: Build
      run: cargo build --release

    - name: Create Release
      id: create_release
      if: matrix.os == 'ubuntu-latest'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: |
          ${{ github.workspace }}/target/release/hecto${{ matrix.os == 'windows-latest' && '.exe' || '' }}
        asset_name: hecto-${{ github.ref_name }}-${{ matrix.os }}
        asset_content_type: application/octet-stream
